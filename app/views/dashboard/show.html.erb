<!-- Dashboard Page  -->
<div class="container-fluid">
  <div class="row">

    <!-- Sidebar Element  -->
    <nav id="dashboard-sidebar" class="col-md-2 sidebar sidebar-color defaultPos">
      <div class="sidebar-sticky" style="position:fixed;">
        <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-white">Dashboard</h6>
        <ul class="nav flex-column">
          <%= link_to dashboard_path, class:"underline-none" do %>
            <li class="nav-item mt-4 mb-4 sidebarNavLinks">
              <i class="fas fa-file-video mr-3 text-warning"></i>Face Analysis
            </li>
          <% end %>
          <%= link_to index_path, class:"underline-none" do %>
            <li class="nav-item mb-4 sidebarNavLinks">
              <i class="fas fa-file-audio mr-3 text-danger"></i>Speech Analysis
            </li>
          <% end %>
          <%= link_to text_analyze_path(current_user.id), class:"underline-none" do %>
            <li class="nav-item mb-4 sidebarNavLinks">
              <i class="fas fa-font mr-3 text-success"></i>Text Analysis
            </li>
          <% end %>
          <li class="nav-item mb-4 sidebarNavLinks"><i class="fas fa-user-tie mr-3 text-primary"></i>Some other stuff</li>
          <li class="nav-item mb-4 sidebarNavLinks"><i class="fas fa-superscript mr-3 text-info"></i>Wow Another Link</li>
        </ul>
        <input id="hide-sidebar-btn" class="btn btn-warning mt-3 rounded-circle" type="button" value="<" onclick="toggleNav();">
        <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-white">Saved Reports</h6>
        <ul class="nav flex-column">
          <li class="nav-item mt-4 mb-4 sidebarNavLinks"><i class="fas fa-file-alt mr-3"></i>This Week</li>
          <li class="nav-item mb-4 sidebarNavLinks"><i class="fas fa-file-alt mr-3"></i>Current Month</li>
          <li class="nav-item mb-4 sidebarNavLinks"><i class="fas fa-file-alt mr-3"></i>Last Quarter</li>
          <li class="nav-item mb-4 sidebarNavLinks"><i class="fas fa-file-alt mr-3"></i>Last Year </li>
        </ul>
      </div>
    </nav>

    <!-- Chart Section                                        style="left: 15px; -->
    <div id="dashboard-main" class="col-md-8 p-0 w-100 d-main-bg">
      <nav class="customnav navbar navbar-expand-lg navbar-dark sticky-top bg-white border-bottom border-muted" style="height: 45px;">
        <a class="navbar-brand text-dark" href="/"><i class="fas fa-brain mr-1"></i>Emotionly</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse d-flex justify-content-end" id="navbarSupportedContent">

          <%#= form_with url: search_companies_path, local: true, class:'form-inline my-2 my-lg-0' , :method => 'post', id: "search-companies"  do |form| %>
            <%#= form.text_field :searchcompany, class: "form-control mr-sm-2", style:"height:20px;", list: 'list' %>
            <%#= form.submit "search", class:"btn btn-outline-success btn-sm my-2 my-sm-0" %>
            <!-- <datalist id="list"></datalist> -->
          <%# end %>

          <div class="navbar-links">
            <ul class="navbar-nav mr-auto">
              <!-- <li class="nav-item"> -->
                <%#= link_to "Profile", user_path(current_user.id), class: "nav-link mr-3" %>
              <!-- </li> -->
              <li class="nav-item">
                <%= link_to "How it Works", user_video_path(current_user.id), class: "nav-link  mr-3" %>
              </li>
              <!-- <li class="nav-item border-dark">
                <%#= link_to "Facial Expression", video_path, class: "nav-link  mr-3" %>
              </li>
              <li class="nav-item">
                <%#= link_to "Speech", index_path, class: "nav-link mr-3" %>
              </li>
              <li class="nav-item">
                <%#= link_to "Text", index_path, class: "nav-link mr-3" %>
              </li>
              <li class="nav-item"> -->
                <%= link_to "Pricing", braintree_pricing_path, class: "nav-link mr-3" %>
              </li>
              <% if signed_in? -%>
                <% if signed_in? && current_user.position == 'manager'  && current_user.company_id == nil%>
                <li class="nav-item">
                  <%= link_to "Add Company", new_company_path, class: "nav-link mr-3" %>
                </li>
                <% end %>
              <% end %>
              <% if current_user.company_id != nil %>
                <li class="nav-item">
                  <%= link_to "Company Home", company_path(current_user.company_id), class: "nav-link mr-3" %>
                </li>
              <% end %>
              <li class="nav-item">
                <%= link_to "Dashboard", dashboard_path, class: "nav-link mr-3" %>
              </li>
              <li class="nav-item">
                <%= link_to "Profile", user_path(current_user.id), class: "nav-link mr-3" %>
              </li>
              <li class="nav-item btn-group" data-behavior='notifications'>
                 <a class="dropdown-toggle nav-link" type="button" data-behavior='notifications-link' id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                   <i class="fas fa-flag text-danger"></i>
                   <span data-behavior='unread-count'></span>
                 </a>
                 <div class="dropdown-menu dropdown-to" aria-labelledby="dropdownMenuButton" data-behavior="notification-items"></div>
             </li>
              <li class="nav-item">
                <% if signed_in? -%>
                <%= link_to t(".sign_out"), sign_out_path, method: :delete, class:"nav-link" %>
                <% else -%>
                <%= link_to t(".sign_in"), sign_in_path, class:"nav-link" %>
                <% end -%>
              </li>
            </ul>
          </div>

        </div>
      </nav>

      <div class="container-fluid mb-4 border-bottom border-muted">
        <div class="row">
          <div class="col-md-6 container mt-3">
            <h3>Dashboard</h3>
            <h4><i class="fas fa-user-tie mr-2 text-primary"></i>William Smith: <em>Company Name</em></h4>
          </div>
          <div class="col-md-6 container mt-4">
            <button class="btn btn-outline-primary btn-sm mr-2 mt-3" type="button" name="button" style="float: right;">View Profile</button>
          </div>
        </div>
      </div>



      <div class="container-fluid">

        <div class="row">
          <div class="col-md-12">
            <div class="p-3 d-main-bg shadow">
              <canvas id="myChart"></canvas>
              <button id="download-pdf" class="btn btn-primary mt-3 ml-3" type="submit" name="" value="Download as PDF"><i class="fas fa-download"></i> Download as PDF</button>
              <button id="toggle-sidebar" class="btn btn-outline-danger mt-3 ml-1" type="submit" name="" value="SPANK" onclick = "addData()">SPANK</button>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="container container-white ml-3 mr-3 mt-3 mb-3 mr-0 p-0 border-right border-muted letstrythis shadow" style="height: 400px;">
            <h3 class="p-3">Video Output</h3>
            <video class= "col-11 ml-3" controls></video>
            <canvas style="display:none;"></canvas>
               <img id="screenshot-img">
                <style> #screenshot-img{display:none}</style>
            <button id="screenshot-button">START</button>
             <button id="end_button">DONE</button>
          </div>
          <div class="container container-white mt-3 mb-3 ml-0 p-0 letstrythis shadow" style="height: 400px;">
            <h3 class="p-3">Chart Summary</h3>
             <canvas id="myPie" class="col-12 mt-5"></canvas> 
          </div>
        </div>

      </div>

    </div>
    <!-- Right Sidebar Loop through employees and display them for that specific company -->
    <div class="col-md-2 sidebar d-main-bg border-left border-muted pl-0 pr-0">
      <h6 class="sidebar-heading text-muted px-3 mt-4 mb-4">Employees</h6>
      <hr class="my-3">
      <h6 class="ml-3 mt-3 text-dgrey"> Bella Bayabos <span><i class="fas fa-minus-square ml-5 mr-4 text-danger" style="float: right;"></i></span></h6>
      <hr class="my-3">
      <h6 class="ml-3 mt-3 text-dgrey"> Calvin Mai <span><i class="fas fa-minus-square ml-5 mr-4 text-danger" style="float: right;"></i></span></h6>
      <hr class="my-3">
      <h6 class="ml-3 mt-3 text-dgrey"> Steven Suzuki <span><i class="fas fa-minus-square ml-5 mr-4 text-danger" style="float: right;"></i></span></h6>
      <hr class="my-3">
    </div>

    <!-- JS starts here -->
    <script type="text/javascript">
    // Add turbolinks so it initializes when page loads.
        const captureVideoButton = document.querySelector('#screenshot .capture-button');
        const screenshotButton = document.querySelector('#screenshot-button');
        const video = document.querySelector('#screenshot video');
        const end = document.querySelector('#end_button');
        const img = document.querySelector('#screenshot-img');
        const canvas = document.createElement('canvas');
        let chartCanvas = document.getElementById('myChart');
        let ctx = chartCanvas.getContext('2d');
        var time_second = 0;
         let pie = document.getElementById('myPie');
         let ctx2 = pie.getContext('2d');
        var numberofarray=0;
        let average_happiness=0;  
        let average_sadness=0;  
        let average_anger=0;  
        let average_contempt=0;  
        let average_disgust=0;  
        let average_fear=0;  
         let average_neutral=0;  
        let average_surprise=0;  

    // Global Options ------------------------------------------
    // bar, pie, line, horizontalBar, doughnut, radar, polarArea

    // Chart.defaults.global.defaultFontFamily = 'Lato';
    // Chart.defaults.global.defaultFontSize = '14';
    // Charts.defaults.global.defaultFontColor = '#000';

    // Hard-coded test data
    var data = {
        labels: [0],
        datasets: [{
        label: "Happiness",
        lineTension: 0.5,
        borderWidth: 2,
        borderColor: 'yellow',
        backgroundColor: 'rgba(240,243,57,0.1)',
        data: [0],
      }, {
        label: "Sadness",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'cornflowerblue',
        backgroundColor: 'rgba(39,128,231,0.1)',
        data: [0],
      }, {
        label: "Anger",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'red',
        backgroundColor: 'rgba(250,0,0,0.1)',
        data: [0],
      }, {
        label: "Contempt",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'green',
        backgroundColor: 'rgba(0,240,0,0.1)',
        data: [0],
      }, {
        label: "Disgust",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'purple',
        backgroundColor: 'rgba(110,25,151,0.1)',
        data: [0],
      }, {
        label: "Fear",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'pink',
        backgroundColor: 'rgba(218,29,235,0.1)',
        data: [0],
      }, {
        label: "Surprise",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'orange',
        backgroundColor: 'rgba(235,160,30,0.1)',
        data: [0],
      }, {
        label: "Neutral",
        lineTension: 0.5,
        borderWidth: 2.33,
        borderColor: 'grey',
        backgroundColor: 'rgba(155,155,155,0.1)',
        data: [0],
      }
    ]
  };
 var piedata = {
    datasets: [{
        data: [],
        backgroundColor: ['rgba(240,243,57,0.5)','rgba(39,128,231,0.5)','rgba(250,0,0,0.5)','rgba(0,240,0,0.5)','rgba(110,25,151,0.5)','rgba(218,29,235,0.5)','rgba(235,160,30,0.5)','rgba(155,155,155,0.5)'],
        borderColor: ['yellow','cornflowerblue','red','green','purple','pink','orange','grey']
    }],

    // These labels appear in the legend and in the tooltips when hovering different arcs
    labels: [
        'Happiness',
        'Sadness',
        'Anger',
        'Contempt',
        'Disgust',
        'Fear',
        'Surprise',
        'Neutral'
    ]
};
  

    

  var myChart = new Chart(ctx, {
    type: 'line',
    data: data,
    options: {
      responsive: true,
    },
  });

   var myPie = new Chart(ctx2, {
     type: 'pie',
     data: piedata,
     options: {
       responsive: true,
        legend: {
        display: true,
        position :'right'
     }
     
     },
    
     
   });
  //Video Constraints
      let constraintObj = {
            audio: false,
            video: {
                facingMode: "user",
                width: { min: 640, ideal: 300, max: 1920 },
                height: { min: 480, ideal: 200, max: 1080 }
            }
        };
            //handle older browsers that might implement getUserMedia in some way
        if (navigator.mediaDevices === undefined) {
            navigator.mediaDevices = {};
            navigator.mediaDevices.getUserMedia = function (constraintObj) {
                let getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
                if (!getUserMedia) {
                    return Promise.reject(new Error('getUserMedia is not implemented in this browser'));
                }
                return new Promise(function (resolve, reject) {
                    getUserMedia.call(navigator, constraintObj, resolve, reject);
                });
            }
        } else {
            navigator.mediaDevices.enumerateDevices()
                .then(devices => {
                    devices.forEach(device => {
                        console.log(device.kind.toUpperCase(), device.label);
                        //, device.deviceId
                    })
                })
                .catch(err => {
                    console.log(err.name, err.message);
                })
        }
            navigator.mediaDevices.getUserMedia(constraintObj)
            .then(function (mediaStreamObj) {
            //connect the media stream to the first video element
             let video = document.querySelector('video');
             if ("srcObject" in video) {
            screenshotButton.onclick = video.onclick = function () {
            var myVar = setInterval(myTimer, 3100); //TIME 10seconds

                function myTimer() {
                    time_second = 3 + time_second;

                    canvas.width = video.videoWidth;
                    canvas.height = video.videoHeight;
                    canvas.getContext('2d').drawImage(video, 0, 0);
                    // Other browsers will fall back to image/png
                    img.src = canvas.toDataURL('image/png');
                    let photo = canvas.toDataURL('image/webp');
                    // No query string parameters for this API call.
                    makeblob = function (dataURL) {
                        var BASE64_MARKER = ';base64,';
                        if (dataURL.indexOf(BASE64_MARKER) == -1) {
                            var parts = dataURL.split(',');
                            var contentType = parts[0].split(':')[1];
                            var raw = decodeURIComponent(parts[1]);
                            return new Blob([raw], { type: contentType });
                        }
                        var parts = dataURL.split(BASE64_MARKER);
                        var contentType = parts[0].split(':')[1];
                        var raw = window.atob(parts[1]);
                        var rawLength = raw.length;

                        var uInt8Array = new Uint8Array(rawLength);

                        for (var i = 0; i < rawLength; ++i) {
                            uInt8Array[i] = raw.charCodeAt(i);
                        }
                        return new Blob([uInt8Array], { type: contentType });
                    }
                    var params = {};
                    $.ajax({
                        // NOTE: You must use the same location in your REST call as you used to obtain your subscription keys.
                        //   For example, if you obtained your subscription keys from westcentralus, replace "westus" in the
                        //   URL below with "westcentralus".
                        beforeSend: function (xhrObj) {
                            // Request headers, also supports "application/octet-stream"
                            xhrObj.setRequestHeader("Content-Type", "application/octet-stream");

                            // NOTE: Replace the "Ocp-Apim-Subscription-Key" value with a valid subscription key.
                            xhrObj.setRequestHeader("Ocp-Apim-Subscription-Key", '<%= ENV['EMOTION_KEY'] %>');
                        },
                        type: "POST",
                        url: "https://westus.api.cognitive.microsoft.com/emotion/v1.0/recognize?" + $.param(params),
                        processData: false,
                        data: makeblob(canvas.toDataURL('image/png')),


                        // Request body
                        // dataSrc: $("#screenshot-img"),
                         }).done(function (data) {
                        // Get face rectangle dimensions
                        var faceRectangle = data[0].faceRectangle;
                        var faceRectangleList = $('#faceRectangle');

                        // Append to DOM
                        <%# for (var prop in faceRectangle) {
                            faceRectangleList.append("<li> " + prop + ": " + faceRectangle[prop] + "</li>");
                        }
                        faceRectangleList.append("<hr>") %>
                        // Get emotion confidence scores
                        var scores = (data[0].scores);
                        var scoresList = $('#scores');
                         <%# console.log(scores.anger*100);
                        scoresList.append((time_second) + "SECONDS"); %>
                        // Append to DOM
                        <%# for (var prop in scores) {
                            scoresList.append("<li> " + prop + ": " + (scores[prop] * 100).toFixed(2) + "</li>");
                        } %>

                        // let myChart = document.getElementById('myChart').getContext('2d');

                        // Global Options ------------------------------------------
                        // bar, pie, line, horizontalBar, doughnut, radar, polarArea
                        // Chart.defaults.global.defaultFontFamily = 'Lato';
                        // Chart.defaults.global.defaultFontSize = '14';
                        // Charts.defaults.global.defaultFontColor = '#000';


                        //test for button onclick to add new data point
                        myChart.data.datasets[0].data.push(scores.happiness*100);
                        myChart.data.datasets[1].data.push(scores.sadness*100);
                        myChart.data.datasets[2].data.push(scores.anger*100);
                        myChart.data.datasets[3].data.push(scores.contempt*100);
                        myChart.data.datasets[4].data.push(scores.disgust*100);
                        myChart.data.datasets[5].data.push(scores.fear*100);
                        myChart.data.datasets[6].data.push(scores.surprise*100);
                        myChart.data.datasets[7].data.push(scores.neutral*100);
                        myChart.data.labels.push(time_second);
                        myChart.update();
                        //Math Algorithms
                        average_happiness +=myChart.data.datasets[0].data[numberofarray];
                        average_sadness +=myChart.data.datasets[1].data[numberofarray];
                        average_anger +=myChart.data.datasets[2].data[numberofarray];
                        average_contempt +=myChart.data.datasets[3].data[numberofarray];
                        average_disgust +=myChart.data.datasets[4].data[numberofarray];
                        average_fear +=myChart.data.datasets[5].data[numberofarray];
                        average_surprise +=myChart.data.datasets[6].data[numberofarray];
                        average_neutral +=myChart.data.datasets[7].data[numberofarray];

                        numberofarray=numberofarray+1;
                        console.log('new');
                        myPie.data.datasets[0].data=[];
                                                                        myPie.update();
                        console.log( myPie.data.datasets[0].data)
                        myPie.data.datasets[0].data.push(average_happiness/(myChart.data.datasets[0].data.length-2));
                        myPie.data.datasets[0].data.push(average_sadness/(myChart.data.datasets[1].data.length-2));
                        myPie.data.datasets[0].data.push(average_anger/(myChart.data.datasets[2].data.length-2));
                        myPie.data.datasets[0].data.push(average_contempt/(myChart.data.datasets[3].data.length-2));
                        myPie.data.datasets[0].data.push(average_disgust/(myChart.data.datasets[4].data.length-2));
                        myPie.data.datasets[0].data.push(average_fear/(myChart.data.datasets[5].data.length-2));
                        myPie.data.datasets[0].data.push(average_surprise/(myChart.data.datasets[6].data.length-2));
                        myPie.data.datasets[0].data.push(average_neutral/(myChart.data.datasets[7].data.length-2));
                                                myPie.update();
                        scoresList.append("<hr>");
                        }).fail(function (err) {
                        alert("Error: " + JSON.stringify(err));
                        });
                        };
                        end.onclick = function () {
                         clearInterval(myVar);
                         document.getElementById('download-pdf').addEventListener("click", downloadPDF);
                            function downloadPDF() {
                            	var newCanvas = document.querySelector('#myChart');

                              // create image from new canvas send toDataURL
                            	var newCanvasImg = newCanvas.toDataURL("image/png", 1.0);

                              // Generate a PDF using jsPDF .
                            	var doc = new jsPDF('landscape');
                            	doc.setFontSize(20);
                            	doc.addImage(newCanvasImg, 'PNG', 10, 10, 280, 150 );
                            	doc.save('new-canvas.pdf');
                             }
                         }
                         video.srcObject = mediaStreamObj;
            }
        }

        else {
            //old version
            video.src = window.URL.createObjectURL(mediaStreamObj);
        }
        video.onloadedmetadata = function (ev) {
         //show in the video element what is being captured by the webcam
        video.play();
        };
        //add listeners for saving video/audio
        })


  // Download chart as PDF functionality
  // Add event listener for button
  


  // Button that adds dummy data (testing purposes)
 

  // Toggles the left nav bar to slide in and out (Currently removed on page due to complications with layout)
  function toggleNav(){
    console.log($('#dashboard-sidebar').hasClass('slideRight') )
    if($('#dashboard-sidebar').hasClass('slideRight') || $('#dashboard-sidebar').hasClass('defaultPos')) {
      if($('#dashboard-sidebar').hasClass('defaultPos')) {
        document.getElementById('dashboard-sidebar').classList.remove('defaultPos');
        console.log('default removed')
      }
      document.getElementById('dashboard-sidebar').classList.remove('slideRight');
      document.getElementById('dashboard-main').classList.remove('slideRight');
      document.getElementById('dashboard-sidebar').classList.add('slideLeft');
      document.getElementById('dashboard-main').classList.add('slideLeft');
      console.log('slide left')
    } else {
      document.getElementById('dashboard-sidebar').classList.remove('slideLeft');
      document.getElementById('dashboard-main').classList.remove('slideLeft');
      document.getElementById('dashboard-sidebar').classList.add('slideRight');
      document.getElementById('dashboard-main').classList.add('slideRight');
      console.log('slide right')
    }
  };
  </script>

  </div>
</div>
